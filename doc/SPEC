== OJ Spec (0.3.0 Draft)
OJ is defined in terms of generators, modifiers, and query maps, each of which
is described below.

== Generators
Generators create partial SQL statements from a query map. They are
implemented as functions that process a query map and return a string.

== Modifiers
Modifiers manipulate and modify query maps. They are implemented as functions
that accept a query map, change it in some way, and return a new valid query map.

== Query Map
A query map is a Clojure map containing the :table key and one or more of the
following keys and corresponding values:

  :table
    (Required, Keyword)
    The name of the table that the query acts upon.

---

  :select
  (Optional, Vector or List)
    If a vector, then the collection of column names to be selected from :table.

    If a list is provided as a column name, it will be treated as an aggregate
    function where the first element is the function and the rest are the parameters.

    Alternatively, the entire :select clause can be an aggregate function defined
    by the rules above. In this case, the query will return only the result of the
    aggregate function as a single value.

    If no :select is specified, the query will select all columns.

    Example:
      :select [:id :name]                 ; => SELECT id, name ...
      :select [:published '(avg :price)]  ; => SELECT published, AVG(price) ...
      :select '(sum :price)               ; => SELECT SUM(price) ...

  :insert
    (Optional, Map)
    A Clojure map of column names corresponding to desired values to insert into
    the :table.

  :update
    (Optional, Map)
    A Clojure map of column names corresponding to desired values to update from
    a particular record in :table.

  :delete
    (Optional, Boolean or Keyword)

    If true, signifies that you wish to delete a particular record from :table.
    If the value of :delete is the keyword :all, the :where key is not required.

The presence of any of these four keys may also require the presence of one or
more of the following keys:

  :where
    (Optional: [:select, :delete, :update], Map)
    A Clojure map containing column names and the corresponding values with which
    to filter the table by. Values may be numbers, strings, vectors, or maps.

    If the value of an item in :where is a map, it signifies the condition to be placed
    onto the item. Keys represent comparator functions and must be one of the following:
    [:< :<= :> :>= :not=]

    Example:
      :where {:age {:> 21 :< 18}} => SELECT ... WHERE age > 21 AND age < 18

  :group
    (Optional: [:select], Vector)
    A vector of SQL column names to group the query by.

  :order
    (Optional: [:select], Vector)
    A vector of two elements. The first is the column name to order by, the
    second is the direction with which to list the results (:desc or :asc).

  :limit
    (Optional: [:select], Integer)
    The number of results which to return from :table.
